{"ast":null,"code":"var _jsxFileName = \"D:\\\\FullStack\\\\github\\\\work\\\\Web\\\\React\\\\parking\\\\src\\\\kakaomap\\\\Marker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CustomOverlayMap, MapMarker } from 'react-kakao-maps-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Marker = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(MapMarker // 마커를 생성합니다\n  , {\n    onClick: () => setIsOpen(true),\n    position: {\n      // 마커가 표시될 위치입니다\n      lat: props.lat,\n      lng: props.lng\n    },\n    image: {\n      src: \"/images/mark.png\",\n      // 마커이미지의 주소입니다\n      size: {\n        width: 64,\n        height: 69\n      },\n      // 마커이미지의 크기입니다\n      options: {\n        offset: {\n          x: 27,\n          y: 69\n        } // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\n\n      }\n    },\n    children: isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap bg-white p-3\",\n      style: {\n        padding: \"10px\",\n        marginTop: \"-50px\",\n        backgroundColor: \"white\",\n        border: \"1px solid #000\",\n        borderRadius: \"10px\"\n      },\n      onClick: () => setIsOpen(false),\n      title: \"\\uB2EB\\uAE30\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title h2 text-primary\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"desc\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ellipsis\",\n              children: props.addr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jibun ellipsis\",\n              children: [\"(\\uC0AC\\uC6A9\\uC2DC\\uAC04) \", props.useTime, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 45\n              }, this), \" (\\uC885\\uB958) \", props.chgerType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Marker, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Marker;\nexport default Marker;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marker\");","map":{"version":3,"names":["React","useState","CustomOverlayMap","MapMarker","Marker","props","isOpen","setIsOpen","lat","lng","src","size","width","height","options","offset","x","y","padding","marginTop","backgroundColor","border","borderRadius","name","addr","useTime","chgerType"],"sources":["D:/FullStack/github/work/Web/React/parking/src/kakaomap/Marker.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { CustomOverlayMap, MapMarker } from 'react-kakao-maps-sdk'\r\nconst Marker = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n  return (\r\n    <MapMarker // 마커를 생성합니다\r\n        onClick={() => setIsOpen(true)}\r\n        position={{\r\n          // 마커가 표시될 위치입니다\r\n          lat: props.lat,\r\n          lng: props.lng,\r\n        }}\r\n        image={{\r\n            src: \"/images/mark.png\", // 마커이미지의 주소입니다\r\n            size: {\r\n              width: 64,\r\n              height: 69,\r\n            }, // 마커이미지의 크기입니다\r\n            options: {\r\n              offset: {\r\n                x: 27,\r\n                y: 69,\r\n              }, // 마커이미지의 옵션입니다. 마커의 좌표와 일치시킬 이미지 안에서의 좌표를 설정합니다.\r\n            },\r\n          }}\r\n      >{isOpen && (\r\n        \r\n            <div className=\"wrap bg-white p-3\" style={{padding:\"10px\", marginTop: \"-50px\",backgroundColor: \"white\", border: \"1px solid #000\", borderRadius:\"10px\"}} onClick={() => setIsOpen(false)}\r\n                    title=\"닫기\">\r\n              <div className=\"info\">\r\n                <div className=\"title h2 text-primary\">\r\n                    {props.name}\r\n                </div>\r\n                <div className=\"body\">\r\n                  <div className=\"desc\">\r\n                    <div className=\"ellipsis\">\r\n                      {props.addr}\r\n                    </div>\r\n                    <div className=\"jibun ellipsis\">\r\n                      (사용시간) {props.useTime}<br/> (종류) {props.chgerType}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        )}\r\n      </MapMarker>\r\n  )\r\n}\r\n\r\nexport default Marker"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,sBAA5C;;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EACtB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;EACF,oBACE,QAAC,SAAD,CAAW;EAAX;IACI,OAAO,EAAE,MAAMM,SAAS,CAAC,IAAD,CAD5B;IAEI,QAAQ,EAAE;MACR;MACAC,GAAG,EAAEH,KAAK,CAACG,GAFH;MAGRC,GAAG,EAAEJ,KAAK,CAACI;IAHH,CAFd;IAOI,KAAK,EAAE;MACHC,GAAG,EAAE,kBADF;MACsB;MACzBC,IAAI,EAAE;QACJC,KAAK,EAAE,EADH;QAEJC,MAAM,EAAE;MAFJ,CAFH;MAKA;MACHC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE,EADG;UAENC,CAAC,EAAE;QAFG,CADD,CAIJ;;MAJI;IANN,CAPX;IAAA,UAoBIX,MAAM,iBAEF;MAAK,SAAS,EAAC,mBAAf;MAAmC,KAAK,EAAE;QAACY,OAAO,EAAC,MAAT;QAAiBC,SAAS,EAAE,OAA5B;QAAoCC,eAAe,EAAE,OAArD;QAA8DC,MAAM,EAAE,gBAAtE;QAAwFC,YAAY,EAAC;MAArG,CAA1C;MAAwJ,OAAO,EAAE,MAAMf,SAAS,CAAC,KAAD,CAAhL;MACQ,KAAK,EAAC,cADd;MAAA,uBAEE;QAAK,SAAS,EAAC,MAAf;QAAA,wBACE;UAAK,SAAS,EAAC,uBAAf;UAAA,UACKF,KAAK,CAACkB;QADX;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAK,SAAS,EAAC,MAAf;UAAA,uBACE;YAAK,SAAS,EAAC,MAAf;YAAA,wBACE;cAAK,SAAS,EAAC,UAAf;cAAA,UACGlB,KAAK,CAACmB;YADT;cAAA;cAAA;cAAA;YAAA,QADF,eAIE;cAAK,SAAS,EAAC,gBAAf;cAAA,0CACUnB,KAAK,CAACoB,OADhB,eACwB;gBAAA;gBAAA;gBAAA;cAAA,QADxB,sBACoCpB,KAAK,CAACqB,SAD1C;YAAA;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA;IAFF;MAAA;MAAA;MAAA;IAAA;EAtBR;IAAA;IAAA;IAAA;EAAA,QADF;AA4CD,CA9CD;;GAAMtB,M;;KAAAA,M;AAgDN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}